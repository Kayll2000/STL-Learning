list 双向链表容器，该容器底层是以双向链表的形式实现的，所以list容器中的元素可以分散存储在内存空间里，而不是存储在一整块连续的内存空间中。

list每个元素配备两个指针，一个指向它的前一个元素，一个指向它的后一个元素。
它可以在序列已知的任何位置快速插入和删除元素。【时间复杂度：O(1)】
1）创建
	list<int> listdata; //空的list容器
	list<int> listdata(10); // 包含10个元素的list容器
	list<int> listdata(10,1);//10个值为1的元素的list容器
	list<int> listbat(listdata);//拷贝
2）常用成员函数
begin()	返回指向容器中第一个元素的双向迭代器。
end()	返回指向容器中最后一个元素所在位置的下一个位置的双向迭代器。
rbegin()	返回指向最后一个元素的反向双向迭代器。
rend()	返回指向第一个元素所在位置前一个位置的反向双向迭代器。
empty()	判断容器中是否有元素，若无元素，则返回 true；反之，返回 false。
size()	返回当前容器实际包含的元素个数。
max_size()	返回容器所能包含元素个数的最大值。这通常是一个很大的值，一般是 232-1，所以我们很少会用到这个函数。
push_back()	在容器尾部插入一个元素。
pop_back()	删除容器尾部的一个元素。
emplace()	在容器中的指定位置插入元素。该函数和 insert() 功能相同，但效率更高。
insert() 	在容器中的指定位置插入元素。
erase()	删除容器中一个或某区域内的元素。
swap()	交换两个容器中的元素，必须保证这两个容器中存储的元素类型是相同的。
resize()	调整容器的大小。
clear()	删除容器存储的所有元素。
remove(val)	删除容器中所有等于 val 的元素。
merge()	合并两个事先已排好序的 list 容器，并且合并之后的 list 容器依然是有序的。
sort()	通过更改容器中元素的位置，将它们进行排序。
reverse()	反转容器中元素的顺序。

	